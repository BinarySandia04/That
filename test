-- Configuring done
-- Generating done
-- Build files have been written to: /home/arans/that/build
[  0%] Built target version
[100%] Built target That
Tokens:
[type: L_STRING, value: Factorial de 10:], [type: SEMICOLON], [type: T_INT], [type: ID, value: f], [type: A_ASSIGMENT], [type: L_INT, value: 1], [type: SEMICOLON], [type: FOR], [type: T_INT], [type: ID, value: i], [type: A_ASSIGMENT], [type: L_INT, value: 2], [type: SEMICOLON], [type: PARENTHESIS_OPEN], [type: ID, value: i], [type: C_LESSER_EQUAL_THAN], [type: L_INT, value: 3], [type: PARENTHESIS_CLOSE], [type: S_AND], [type: PARENTHESIS_OPEN], [type: ID, value: f], [type: S_MODULO], [type: L_INT, value: 7], [type: C_NOT_EQUAL], [type: L_INT, value: 0], [type: PARENTHESIS_CLOSE], [type: SEMICOLON], [type: ID, value: i], [type: A_ADD], [type: L_INT, value: 1], [type: CURLY_OPEN], [type: ID, value: f], [type: A_ASSIGMENT], [type: ID, value: f], [type: S_MULTIPLY], [type: ID, value: i], [type: SEMICOLON], [type: ID, value: i], [type: S_PLUS], [type: L_STRING, value: ! = ], [type: S_PLUS], [type: ID, value: f], [type: SEMICOLON], [type: CURLY_CLOSE], [type: L_STRING, value: Hola], [type: SEMICOLON], [type: T_INT], [type: ID, value: a], [type: A_ASSIGMENT], [type: L_INT, value: 0], [type: SEMICOLON], [type: T_INT], [type: ID, value: r], [type: A_ASSIGMENT], [type: L_INT, value: 10], [type: SEMICOLON], [type: WHILE], [type: ID, value: a], [type: C_LESSER_EQUAL_THAN], [type: ID, value: r], [type: CURLY_OPEN], [type: ID, value: a], [type: A_ASSIGMENT], [type: ID, value: a], [type: S_PLUS], [type: L_INT, value: 1], [type: SEMICOLON], [type: ID, value: a], [type: SEMICOLON], [type: CURLY_CLOSE]
F: 0 T: 0
0!!!
F: 5 T: 5
5!!!
F: 11 T: 11
11!!!
F: 13 T: 25
F: 13 T: 17
F: 14 T: 16
F: 14 T: 14
14!!!
IDENTIFIER
F: 16 T: 16
16!!!
F: 19 T: 25
F: 20 T: 24
F: 20 T: 22
F: 20 T: 20
20!!!
IDENTIFIER
F: 22 T: 22
22!!!
F: 24 T: 24
24!!!
F: 29 T: 29
29!!!
F: 33 T: 35
F: 33 T: 33
33!!!
IDENTIFIER
F: 35 T: 35
35!!!
IDENTIFIER
F: 37 T: 41
F: 37 T: 37
37!!!
IDENTIFIER
F: 39 T: 41
F: 39 T: 39
39!!!
F: 41 T: 41
41!!!
IDENTIFIER
F: 44 T: 44
44!!!
F: 49 T: 49
49!!!
F: 54 T: 54
54!!!
F: 57 T: 59
F: 57 T: 57
57!!!
IDENTIFIER
F: 59 T: 59
59!!!
IDENTIFIER
F: 63 T: 65
F: 63 T: 63
63!!!
IDENTIFIER
F: 65 T: 65
65!!!
F: 67 T: 67
67!!!
IDENTIFIER
AST:
[ type: NODE, fills: [ type: DEF_FUNCTION, fills: [ type: VAL_STRING, fills: , data: -118109392, nd: 16 ], data: 6, nd: 0 ][ type: DECLARATION, fills: [ type: VAL_INT, fills: , data: 1, nd: 0 ][ type: TYPE, fills: , data: 7, nd: 1 ], data: -118109072, nd: 1 ][ type: FOR, fills: [ type: NODE, fills: [ type: DECLARATION, fills: [ type: VAL_INT, fills: , data: 2, nd: 22020 ][ type: TYPE, fills: , data: 36, nd: 1 ], data: -118094496, nd: 1 ], data: -118094720, nd: 0 ][ type: EXP_BINARY, fills: [ type: EXP_BINARY, fills: [ type: REFERENCE, fills: , data: -118094224, nd: 1 ][ type: VAL_INT, fills: , data: 3, nd: 20050 ], data: 640, nd: 18 ][ type: EXP_BINARY, fills: [ type: EXP_BINARY, fills: [ type: REFERENCE, fills: , data: -118093872, nd: 1 ][ type: VAL_INT, fills: , data: 7, nd: 22020 ], data: 0, nd: 9 ][ type: VAL_INT, fills: , data: 0, nd: 22020 ], data: 0, nd: 14 ], data: 0, nd: 10 ][ type: NODE, fills: [ type: ASSIGNATION, fills: [ type: EXP_BINARY, fills: [ type: REFERENCE, fills: , data: -118096512, nd: 1 ][ type: VAL_INT, fills: , data: 1, nd: 0 ], data: 80, nd: 5 ], data: -118096704, nd: 1 ], data: 80, nd: 0 ][ type: NODE, fills: [ type: ASSIGNATION, fills: [ type: EXP_BINARY, fills: [ type: REFERENCE, fills: , data: -118096304, nd: 1 ][ type: REFERENCE, fills: , data: -118096192, nd: 1 ], data: -118109280, nd: 7 ], data: -118096080, nd: 1 ][ type: DEF_FUNCTION, fills: [ type: EXP_BINARY, fills: [ type: REFERENCE, fills: , data: -118095888, nd: 1 ][ type: EXP_BINARY, fills: [ type: VAL_STRING, fills: , data: -118095696, nd: 4 ][ type: REFERENCE, fills: , data: -118095584, nd: 1 ], data: 10, nd: 5 ], data: 11, nd: 5 ], data: 1472, nd: 65 ], data: 34, nd: 0 ], data: 80, nd: 0 ][ type: DEF_FUNCTION, fills: [ type: VAL_STRING, fills: , data: -118109936, nd: 4 ], data: -118110080, nd: 0 ][ type: DECLARATION, fills: [ type: VAL_INT, fills: , data: 0, nd: 22020 ][ type: TYPE, fills: , data: -118110080, nd: 1 ], data: -118095024, nd: 1 ][ type: DECLARATION, fills: [ type: VAL_INT, fills: , data: 10, nd: 0 ][ type: TYPE, fills: , data: 1552, nd: 1 ], data: -118090096, nd: 1 ][ type: WHILE, fills: [ type: EXP_BINARY, fills: [ type: REFERENCE, fills: , data: -118089744, nd: 1 ][ type: REFERENCE, fills: , data: -118089632, nd: 1 ], data: 0, nd: 18 ][ type: NODE, fills: [ type: ASSIGNATION, fills: [ type: EXP_BINARY, fills: [ type: REFERENCE, fills: , data: -118089440, nd: 1 ][ type: VAL_INT, fills: , data: 1, nd: 0 ], data: 0, nd: 5 ], data: -118089248, nd: 1 ][ type: DEF_FUNCTION, fills: [ type: REFERENCE, fills: , data: -118089136, nd: 1 ], data: 0, nd: 0 ], data: 0, nd: 0 ], data: 0, nd: 0 ], data: 4, nd: 0 ]
Appended: f
Appended: i
1
Si, son 2
Appended: a
Appended: r
0
ASM:
(0) LOADC = 1 0 0 
(1) DEF = 8 0 
(2) LOADC = 1 0 1 
(3) PUSH = 2 0 0 
(4) CONT = 4 
(5) LOADC = 1 0 2 
(6) PUSH = 2 0 0 
(7) LOAD = 0 0 0 
(8) LOADC = 1 1 3 
(9) LEQ = 24 0 1 
(10) LOAD = 0 1 -1 
(11) LOADC = 1 2 4 
(12) MOD = 15 1 2 
(13) LOADC = 1 2 5 
(14) NEQ = 20 1 2 
(15) AND = 16 0 1 
(16) TEST = 28 0 16 
(17) LOAD = 0 0 -1 
(18) LOAD = 0 1 0 
(19) MUL = 13 0 1 
(20) MOVE = 5 0 -1 
(21) LOAD = 0 0 0 
(22) LOADC = 1 1 6 
(23) LOAD = 0 2 -1 
(24) ADD = 11 1 2 
(25) ADD = 11 0 1 
(26) DEF = 8 0 
(27) LOAD = 0 0 0 
(28) LOADC = 1 1 1 
(29) ADD = 11 0 1 
(30) MOVE = 5 0 0 
(31) JUMP = 27 -24 
(32) CLOSE = 3 1 
(33) LOADC = 1 0 7 
(34) DEF = 8 0 
(35) LOADC = 1 0 5 
(36) PUSH = 2 0 0 
(37) LOADC = 1 0 8 
(38) PUSH = 2 0 0 
(39) LOAD = 0 0 0 
(40) LOAD = 0 1 1 
(41) LEQ = 24 0 1 
(42) CONT = 4 
(43) TEST = 28 0 8 
(44) LOAD = 0 0 -2 
(45) LOADC = 1 1 1 
(46) ADD = 11 0 1 
(47) MOVE = 5 0 -2 
(48) LOAD = 0 0 -2 
(49) DEF = 8 0 
(50) CLOSE = 3 0 
(51) JUMP = 27 -13 

EXEC:
(0) LOADC
0 0  
C: 0 (16) -> R: 0
0: [String, 16]
1: [, 0]
2: [Int, 3]
(1) DEF
0   
Factorial de 10:
0: [String, 16]
1: [, 0]
2: [Int, 3]
(2) LOADC
0 1  
C: 1 (1) -> R: 0
0: [Int, 1]
1: [, 0]
2: [Int, 3]
(3) PUSH
0 0  
0: [Int, 1]
0: [Int, 1]
1: [, 0]
2: [Int, 3]
(4) CONT
   
OFSET: 1
0: [Int, 1]
1: [, 0]
2: [Int, 3]
(5) LOADC
0 2  
C: 2 (2) -> R: 0
0: [Int, 2]
1: [, 0]
2: [Int, 3]
(6) PUSH
0 0  
0: [Int, 1]
1: [Int, 2]
0: [Int, 2]
1: [, 0]
2: [Int, 3]
(7) LOAD
0 0  
S: 0 (+1) -> R: 0
0: [Int, 2]
1: [, 0]
2: [Int, 3]
(8) LOADC
1 3  
C: 3 (3) -> R: 1
0: [Int, 2]
1: [Int, 3]
2: [Int, 3]
(9) LEQ
0 1  
0: [Bool, 1]
1: [Int, 3]
2: [Int, 3]
(10) LOAD
1 -1  
S: -1 (+1) -> R: 1
0: [Bool, 1]
1: [Int, 1]
2: [Int, 3]
(11) LOADC
2 4  
C: 4 (7) -> R: 2
0: [Bool, 1]
1: [Int, 1]
2: [Int, 7]
(12) MOD
1 2  
0: [Bool, 1]
1: [Int, 1]
2: [Int, 7]
(13) LOADC
2 5  
C: 5 (0) -> R: 2
0: [Bool, 1]
1: [Int, 1]
2: [Int, 0]
(14) NEQ
1 2  
0: [Bool, 1]
1: [Bool, 1]
2: [Int, 0]
(15) AND
0 1  
0: [Bool, 1]
1: [Bool, 1]
2: [Int, 0]
(16) TEST
0 16  
0: [Bool, 1]
1: [Bool, 1]
2: [Int, 0]
(17) LOAD
0 -1  
S: -1 (+1) -> R: 0
0: [Int, 1]
1: [Bool, 1]
2: [Int, 0]
(18) LOAD
1 0  
S: 0 (+1) -> R: 1
0: [Int, 1]
1: [Int, 2]
2: [Int, 0]
(19) MUL
0 1  
0: [Int, 2]
1: [Int, 2]
2: [Int, 0]
(20) MOVE
0 -1  
S: 0 <- R: 0
0: [Int, 2]
1: [Int, 2]
2: [Int, 0]
(21) LOAD
0 0  
S: 0 (+1) -> R: 0
0: [Int, 2]
1: [Int, 2]
2: [Int, 0]
(22) LOADC
1 6  
C: 6 (4) -> R: 1
0: [Int, 2]
1: [String, 4]
2: [Int, 0]
(23) LOAD
2 -1  
S: -1 (+1) -> R: 2
0: [Int, 2]
1: [String, 4]
2: [Int, 2]
(24) ADD
1 2  
0: [Int, 2]
1: [String, 5]
2: [Int, 2]
(25) ADD
0 1  
0: [String, 6]
1: [String, 5]
2: [Int, 2]
(26) DEF
0   
2! = 2
0: [String, 6]
1: [String, 5]
2: [Int, 2]
(27) LOAD
0 0  
S: 0 (+1) -> R: 0
0: [Int, 2]
1: [String, 5]
2: [Int, 2]
(28) LOADC
1 1  
C: 1 (1) -> R: 1
0: [Int, 2]
1: [Int, 1]
2: [Int, 2]
(29) ADD
0 1  
0: [Int, 3]
1: [Int, 1]
2: [Int, 2]
(30) MOVE
0 0  
S: 1 <- R: 0
0: [Int, 3]
1: [Int, 1]
2: [Int, 2]
(31) JUMP
-24   
0: [Int, 3]
1: [Int, 1]
2: [Int, 2]
(8) LOADC
1 3  
C: 3 (3) -> R: 1
0: [Int, 3]
1: [Int, 3]
2: [Int, 2]
(9) LEQ
0 1  
0: [Bool, 1]
1: [Int, 3]
2: [Int, 2]
(10) LOAD
1 -1  
S: -1 (+1) -> R: 1
0: [Bool, 1]
1: [Int, 2]
2: [Int, 2]
(11) LOADC
2 4  
C: 4 (7) -> R: 2
0: [Bool, 1]
1: [Int, 2]
2: [Int, 7]
(12) MOD
1 2  
0: [Bool, 1]
1: [Int, 2]
2: [Int, 7]
(13) LOADC
2 5  
C: 5 (0) -> R: 2
0: [Bool, 1]
1: [Int, 2]
2: [Int, 0]
(14) NEQ
1 2  
0: [Bool, 1]
1: [Bool, 1]
2: [Int, 0]
(15) AND
0 1  
0: [Bool, 1]
1: [Bool, 1]
2: [Int, 0]
(16) TEST
0 16  
0: [Bool, 1]
1: [Bool, 1]
2: [Int, 0]
(17) LOAD
0 -1  
S: -1 (+1) -> R: 0
0: [Int, 2]
1: [Bool, 1]
2: [Int, 0]
(18) LOAD
1 0  
S: 0 (+1) -> R: 1
0: [Int, 2]
1: [Int, 3]
2: [Int, 0]
(19) MUL
0 1  
0: [Int, 6]
1: [Int, 3]
2: [Int, 0]
(20) MOVE
0 -1  
S: 0 <- R: 0
0: [Int, 6]
1: [Int, 3]
2: [Int, 0]
(21) LOAD
0 0  
S: 0 (+1) -> R: 0
0: [Int, 3]
1: [Int, 3]
2: [Int, 0]
(22) LOADC
1 6  
C: 6 (4) -> R: 1
0: [Int, 3]
1: [String, 4]
2: [Int, 0]
(23) LOAD
2 -1  
S: -1 (+1) -> R: 2
0: [Int, 3]
1: [String, 4]
2: [Int, 6]
(24) ADD
1 2  
0: [Int, 3]
1: [String, 5]
2: [Int, 6]
(25) ADD
0 1  
0: [String, 6]
1: [String, 5]
2: [Int, 6]
(26) DEF
0   
3! = 6
0: [String, 6]
1: [String, 5]
2: [Int, 6]
(27) LOAD
0 0  
S: 0 (+1) -> R: 0
0: [Int, 3]
1: [String, 5]
2: [Int, 6]
(28) LOADC
1 1  
C: 1 (1) -> R: 1
0: [Int, 3]
1: [Int, 1]
2: [Int, 6]
(29) ADD
0 1  
0: [Int, 4]
1: [Int, 1]
2: [Int, 6]
(30) MOVE
0 0  
S: 1 <- R: 0
0: [Int, 4]
1: [Int, 1]
2: [Int, 6]
(31) JUMP
-24   
0: [Int, 4]
1: [Int, 1]
2: [Int, 6]
(8) LOADC
1 3  
C: 3 (3) -> R: 1
0: [Int, 4]
1: [Int, 3]
2: [Int, 6]
(9) LEQ
0 1  
0: [Bool, 0]
1: [Int, 3]
2: [Int, 6]
(10) LOAD
1 -1  
S: -1 (+1) -> R: 1
0: [Bool, 0]
1: [Int, 6]
2: [Int, 6]
(11) LOADC
2 4  
C: 4 (7) -> R: 2
0: [Bool, 0]
1: [Int, 6]
2: [Int, 7]
(12) MOD
1 2  
0: [Bool, 0]
1: [Int, 6]
2: [Int, 7]
(13) LOADC
2 5  
C: 5 (0) -> R: 2
0: [Bool, 0]
1: [Int, 6]
2: [Int, 0]
(14) NEQ
1 2  
0: [Bool, 0]
1: [Bool, 1]
2: [Int, 0]
(15) AND
0 1  
0: [Bool, 0]
1: [Bool, 1]
2: [Int, 0]
(16) TEST
0 16  
0: [Bool, 0]
1: [Bool, 1]
2: [Int, 0]
(32) CLOSE
1   
Before: 1
After: 0
0: [Int, 6]
0: [Bool, 0]
1: [Bool, 1]
2: [Int, 0]
(33) LOADC
0 7  
C: 7 (4) -> R: 0
0: [String, 4]
1: [Bool, 1]
2: [Int, 0]
(34) DEF
0   
Hola
0: [String, 4]
1: [Bool, 1]
2: [Int, 0]
(35) LOADC
0 5  
C: 5 (0) -> R: 0
0: [Int, 0]
1: [Bool, 1]
2: [Int, 0]
(36) PUSH
0 0  
0: [Int, 6]
1: [Int, 0]
0: [Int, 0]
1: [Bool, 1]
2: [Int, 0]
(37) LOADC
0 8  
C: 8 (10) -> R: 0
0: [Int, 10]
1: [Bool, 1]
2: [Int, 0]
(38) PUSH
0 0  
0: [Int, 6]
1: [Int, 0]
2: [Int, 10]
0: [Int, 10]
1: [Bool, 1]
2: [Int, 0]
(39) LOAD
0 0  
S: 0 (+0) -> R: 0
0: [Int, 6]
1: [Bool, 1]
2: [Int, 0]
(40) LOAD
1 1  
S: 1 (+0) -> R: 1
0: [Int, 6]
1: [Int, 0]
2: [Int, 0]
(41) LEQ
0 1  
0: [Bool, 0]
1: [Int, 0]
2: [Int, 0]
(42) CONT
   
OFSET: 3
0: [Bool, 0]
1: [Int, 0]
2: [Int, 0]
(43) TEST
0 8  
0: [Bool, 0]
1: [Int, 0]
2: [Int, 0]
(51) JUMP
-13   
0: [Bool, 0]
1: [Int, 0]
2: [Int, 0]
(39) LOAD
0 0  
S: 0 (+3) -> R: 0
0: [, 4]
1: [Int, 0]
2: [Int, 0]
(40) LOAD
1 1  
S: 1 (+3) -> R: 1
0: [, 4]
1: [, 0]
2: [Int, 0]
(41) LEQ
0 1  
No match for operator <= and types , 
